{
	"info": {
		"_postman_id": "5f3d93fd-9d7d-48dc-b61f-fd44bb96d164",
		"name": "Cat Facts",
		"description": "Contact Support:\n Name: Liz Fedak\n Email: admin@admin.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "34453735-5f3d93fd-9d7d-48dc-b61f-fd44bb96d164"
	},
	"item": [
		{
			"name": "breeds",
			"item": [
				{
					"name": "Returns a list of breeds",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c651cce9-7aec-4282-9fca-2d040f2c228d",
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is in an acceptable range\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(1000);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields based on the schema\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('breeds').that.is.an('array');",
									"    responseData.breeds.forEach(function(breed) {",
									"        pm.expect(breed).to.have.property('name').that.is.a('string');",
									"        pm.expect(breed).to.have.property('size').that.is.a('string');",
									"        pm.expect(breed).to.have.property('origin').that.is.a('string');",
									"        pm.expect(breed).to.have.property('temperament').that.is.a('string');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Limit query parameter format is valid\", function () {",
									"  pm.expect(pm.request.url.query).to.include(\"limit\");",
									"  pm.expect(pm.request.url.query.get(\"limit\")).to.match(/^\\d+$/);",
									"});",
									"",
									"",
									"pm.test(\"Validate the presence of 'breeds' array and its length based on the limit query parameter value\", function () {",
									"    const limit = pm.request.url.query.get('limit');",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.breeds).to.exist.and.to.be.an('array');",
									"    pm.expect(responseData.breeds).to.have.lengthOf(parseInt(limit));",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "2a0be265-d9c8-409a-b6ef-612a70f75e14",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/breeeeeds?limit=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"breeeeeds"
							],
							"query": [
								{
									"key": "limit",
									"value": "<long>",
									"description": "This is a description"
								}
							]
						},
						"description": "Returns a list of breeds"
					},
					"response": [
						{
							"id": "ecbbc151-a53b-4acd-b8fd-f02668a87f8b",
							"name": "Normal operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/breeds?limit=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"breeds"
									],
									"query": [
										{
											"description": "This is a description",
											"key": "limit",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"breed\": \"<string>\",\n\t\"country\": \"<string>\",\n\t\"origin\": \"<string>\",\n\t\"coat\": \"<string>\",\n\t\"pattern\": \"<string>\"\n}"
						},
						{
							"id": "24b1fcf1-0f5f-4438-a98c-06b3d1032ec0",
							"name": "Server exception",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/breeds?limit=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"breeds"
									],
									"query": [
										{
											"description": "This is a description",
											"key": "limit",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"breed\": \"<string>\",\n\t\"country\": \"<string>\",\n\t\"origin\": \"<string>\",\n\t\"coat\": \"<string>\",\n\t\"pattern\": \"<string>\"\n}"
						}
					]
				}
			],
			"id": "ac8c6c39-465b-45e7-8e11-5bd775487b22"
		},
		{
			"name": "fact",
			"item": [
				{
					"name": "Returns a random fact",
					"id": "5c860b35-7a37-4010-9b3a-9d8685e92d82",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/fact?max_length=100",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"fact"
							],
							"query": [
								{
									"key": "max_length",
									"value": "100",
									"description": "maximum length of returned fact"
								}
							]
						},
						"description": "Returns a random fact"
					},
					"response": [
						{
							"id": "949c8450-1254-4388-8493-4def7f04a006",
							"name": "Normal response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/fact?max_length=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fact"
									],
									"query": [
										{
											"description": "maximum length of returned fact",
											"key": "max_length",
											"value": "100"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"example\": {\n\t\t\"fact\": \"A cat's normal pulse is 140-240 beats per minute, with an average of 195.\"\n\t}\n}"
						},
						{
							"id": "f10cac60-952d-4688-83ca-35fed5e0abaf",
							"name": "Fact not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/fact?max_length=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fact"
									],
									"query": [
										{
											"description": "maximum length of returned fact",
											"key": "max_length",
											"value": "100"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": []
						},
						{
							"id": "ec78898d-e3ae-4893-a7ef-40c573ecaf46",
							"name": "Normal response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/fact?max_length=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"fact"
									],
									"query": [
										{
											"description": "maximum length of returned fact",
											"key": "max_length",
											"value": "100"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"example\": \"unsuccess\"\n}"
						}
					]
				}
			],
			"id": "220d4278-8ad5-4bdd-82b3-287f0360cbe7"
		},
		{
			"name": "facts",
			"item": [
				{
					"name": "Get a list of facts",
					"id": "1054820a-0096-43ec-8ee9-3aa90651c6ae",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/facts?max_length=<long>&limit=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"facts"
							],
							"query": [
								{
									"key": "max_length",
									"value": "<long>",
									"description": "length"
								},
								{
									"key": "limit",
									"value": "<long>",
									"description": "limit the amount of results returned"
								}
							]
						},
						"description": "Returns a a list of facts"
					},
					"response": [
						{
							"id": "0ceab37c-c96c-43b0-9a14-a169ef711d8f",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/facts?max_length=<long>&limit=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"facts"
									],
									"query": [
										{
											"description": "length",
											"key": "max_length",
											"value": "<long>"
										},
										{
											"description": "limit the amount of results returned",
											"key": "limit",
											"value": "<long>"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"fact\": \"<string>\",\n\t\"length\": \"<integer>\"\n}"
						},
						{
							"id": "4a787b40-a6b4-44ee-8c95-91faf1435825",
							"name": "successful operation",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/facts?max_length=<long>&limit=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"facts"
									],
									"query": [
										{
											"description": "length",
											"key": "max_length",
											"value": "<long>"
										},
										{
											"description": "limit the amount of results returned",
											"key": "limit",
											"value": "<long>"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n\t\"fact\": \"<string>\",\n\t\"length\": \"<integer>\"\n}"
						}
					]
				}
			],
			"id": "29e6803a-df64-4fe7-9828-75dd21ad7ee5"
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "{{basicAuthUsername}}",
				"type": "string"
			},
			{
				"key": "password",
				"value": "{{basicAuthPassword}}",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "775543ba-c021-42d9-8db2-c957a3fa2347",
			"key": "baseUrl",
			"value": "https://catfact.ninja"
		}
	]
}